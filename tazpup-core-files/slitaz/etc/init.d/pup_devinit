#!/bin/sh

. /etc/DISTRO_SPECS
. /etc/rc.d/PUPSTATE
. /etc/rc.d/MODULESCONFIG
. /etc/rc.d/functions4puppy4
. /etc/rc.d/BOOTCONSTRAINED #120704 has BOOT_DISABLESWAP, BOOT_ATIME, BOOT_DIRTYWRITE.

KERNVER="`uname -r`"
MODALIASES="`ls /sys/bus/*/devices/*/modalias`"

sleep 0.1

#replay uevents from /sys...
echo "Generating uevents..."
for ONEMODALIAS in $MODALIASES
do
 ONEPATH="`dirname $ONEMODALIAS`"
 if [ -e ${ONEPATH}/uevent ];then
  echo add > ${ONEPATH}/uevent #generates an 'add' uevent.
  sleep 0.02
 fi
done

if [ ! -d /initrd ];then #full hd installation.

 echo "Probing nls_cp437, nls_iso8859-1, fuse, aufs, squashfs..."

 modprobe nls_cp437 > /dev/null 2>&1 #these needed by vfat/ntfs/ext2 f.s.'s. 110712 maybe builtin.
 modprobe nls_iso8859-1 > /dev/null 2>&1 # "
 modprobe fuse
 modprobe aufs
 modprobe squashfs
 
 #we can determine ide/sata drives at this point (drivers builtin to kernel)...
 #110126 define ATADRIVES as all internal ide/pata/sata drives (not usb), except optical...
 #110712 rewritten to handle kernel with usb driver built-in...
 
 echo "Checking drive types..."
 
 ALLDRVS0="`find /sys/block -maxdepth 1 -name 'mmc*' -o -name 'sd*' -o -name 'scd*' -o -name 'sr*' -o -name 'nvme*' | xargs -l readlink 2>/dev/null | grep -v '/usb[0-9]' | rev | cut -f 1 -d '/' | rev`" #all *except* usb!
 ALLDRVS="`echo "$ALLDRVS0" | tr '\n' ' '`" #all *except* usb!
 [ "$ALLDRVS" = " " ] && ALLDRVS=""
 ATADRIVES="`echo "$ALLDRVS0" | grep -v '^sr|^scd' | tr '\n' ' '`"
 [ "$ATADRIVES" = " " ] && ATADRIVES=""
 ATAOPTICALDRIVES="`echo "$ALLDRVS0" | grep '^sr|^scd' | tr '\n' ' '`"
 [ "$ATAOPTICALDRIVES" = " " ] && ATAOPTICALDRIVES=""
 
 if [ -e /proc/ide ];then #110126
  for ONEIDE in `ls -1 /proc/ide | grep '^hd' | tr '\n' ' '`
  do
   if [ "`cat /proc/ide/${ONEIDE}/media`" = "cdrom" ];then
    ATAOPTICALDRIVES="${ATAOPTICALDRIVES}${ONEIDE} "
   else
    ATADRIVES="${ATADRIVES}${ONEIDE} "
   fi
  done
 fi
 
 ATADRIVES0="`echo -n "$ATADRIVES" | tr ' ' '\n'`"
 ATAOPTICALDRIVES0="`echo -n "$ATAOPTICALDRIVES" | tr ' ' '\n'`"
 echo '#ATADRIVES is all internal ide/pata/sata drives, excluding optical, excluding usb...' >> /etc/rc.d/PUPSTATE
 echo "ATADRIVES='${ATADRIVES}'" >> /etc/rc.d/PUPSTATE
 echo '#ATAOPTICALDRIVES is list of non-usb optical drives...'  >> /etc/rc.d/PUPSTATE #110206
 echo "ATAOPTICALDRIVES='$ATAOPTICALDRIVES'"  >> /etc/rc.d/PUPSTATE
fi

if [ ! -d /proc/acpi ]; then
echo "No ACPI, loading APM module..."
modprobe apm #v406
fi

#110823 mavrothal: Check if it is an OLPC XO and add the devices...
echo "Checking if the computer is OLPC XO..."
ISITANXO=`cat /sys/class/dmi/id/product_name`
if [ "$ISITANXO" = "XO" ] && [ $UDEVVER -gt 150 ] ; then
   echo "OLPC XO detected. Adding uevents for XO laptop..."
   udevadm trigger  --action=add --subsystem-match="input" --subsystem-match="sound"
   udevadm settle
fi

################WAIT MODULES LOADED##################

echo "Waiting for modules to complete loading..."

WAITCNT=0
PCIPCMCIA="`busybox lspci | grep -o '0607:'`"

if [ "$PCIPCMCIA" != "" ];then #this may be slow to respond.
 echo "Waiting from pcmcia modules to load..."
 echo -n " pcmcia" 
 while [ $WAITCNT -lt 10 ];do
  [ "`lsmod | grep -E '^yenta_socket |^tcic |^i82092 |^i82365 |^pd6729 '`" != "" ] && break
  WAITCNT=`expr $WAITCNT + 1`
  sleep 1
  echo -n " $WAITCNT"
 done
fi

PCIUSB="`busybox lspci | grep -o -E '0c03:'`"
#note, if initrd then usb-storage will have already loaded...
USBBUILTIN='no'

if [ "`modinfo ehci_hcd 2>/dev/null`" = "" ];then #110712 130201 shut this up.
 #kernel has usb core drivers (and usb-storage) builtin.
 USBBUILTIN='yes'
else
 if [ "$PCIUSB" != "" ];then #this may be slow to respond.
  echo "Waiting from usb modules to load..."
  echo -n " usb"
  PCIUSBNUM=`echo "$PCIUSB" | sort -u | wc -l`
  while [ $WAITCNT -lt 10 ];do
   [ `lsmod | grep -o -E '^uhci_hcd|^ohci_hcd|^ehci_hcd|^xhci_hcd' | wc -l` -ge $PCIUSBNUM ] && break
   WAITCNT=`expr $WAITCNT + 1`
   sleep 1
   echo -n " $WAITCNT"
  done
 fi
fi

echo "Checking kernel version..."

if vercmp $KERNVER lt '2.6.24' ;then #120124
  
 echo "The kernel version is below 2.6.24, more modules setup..." 
 
 [ -e /sys/bus/pcmcia/devices ] && NEWPCMCIA="`ls /sys/bus/pcmcia/devices/*/modalias | tr '\n' ' '`"
 [ -e /sys/bus/usb/devices ] && NEWUSB="`ls /sys/bus/usb/devices/*/modalias | tr '\n' ' '`"
 for ONEMODALIAS in ${NEWPCMCIA}${NEWUSB}
 do
  ONEPATH="`dirname $ONEMODALIAS`"
  if [ -e ${ONEPATH}/uevent ];then
   echo add > ${ONEPATH}/uevent #generates an 'add' uevent.
   sleep 0.02
  fi
 done
else
 #110511 now using udevadm for usb, ssb and pcmcia... 110513 keep ssb as before...
 #v424 try it a different way, this also fixes ssb devices (such as b43.ko)...
 
 [ -e /sys/bus/ssb/devices ] && NEWSSB="`ls /sys/bus/ssb/devices/*/uevent 2>/dev/null | tr '\n' ' '`"
 for ONEUEVENT in ${NEWSSB} #${NEWPCMCIA}${NEWUSB}${NEWSSB} #110511
 do
  ONEPATH="`dirname $ONEUEVENT`"
  #the check for 'modalias' file is maybe needed for old kernel?...
  [ ! -e ${ONEPATH}/modalias ] && [ "`grep 'MODALIAS' $ONEUEVENT`" = "" ] && continue
  echo add > $ONEUEVENT
  sleep 0.02
 done
# #110302 wasn't getting the right uevents for my 3g modem...
# udevadm trigger --action=add --subsystem-match=usb
# #TODO i think need this:

 echo "Add udev event for 3g modem..."	
 udevadm trigger --action=add --subsystem-match="pcmcia*" --subsystem-match="usb*" 
fi

if [ "$USBBUILTIN" = "no" ];then #110712
 #wait for usb-storage drives to become available...(already done if initrd)
 #note, pup_event_backend_d and udevd both log to this file when load modules
 # (the latter via udev handler script /sbin/pup_event_backend_modprobe)...
 #101119 /tmp/pup_event_backend/pup_event_module_devpath_log* now multiple files (see /sbin/pup_event_backend_modprobe)
 
 echo "Waiting for usb-storage drives to become available..."
 
 if [ "`cat /tmp/pup_event_backend/pup_event_module_devpath_log* | grep 'usb_storage'`" != "" ];then #see pup_event_backend_modprobe
  echo -n " usb-storage"
  while [ $WAITCNT -lt 15 ];do
   [ "`dmesg | grep 'usb-storage: device scan complete'`" != "" ] && break
   sleep 1
   WAITCNT=`expr $WAITCNT + 1`
   echo -n " $WAITCNT"
  done
  #precaution, make sure have got them all... v412 need sort -u...
  USBSTORAGES=`/bin/dmesg | grep "usb-storage: device found at" | sort -u | wc -l`
  while [ $WAITCNT -lt 15 ];do
   AVAILABLEUSBSTORAGES=`/bin/dmesg | grep "usb-storage: device scan complete" | wc -l`
   [ $AVAILABLEUSBSTORAGES -ge $USBSTORAGES ] && break
   sleep 1
   WAITCNT=`expr $WAITCNT + 1`
   echo -n " $WAITCNT"
  done
 fi

 sleep 1 #v411 a bit extra. rerwin reports usb mouse detection problem some hardware.
         #(delay before usb mouse info appears in /proc/bus/input/devices)
fi

##############USER SELECTED MODULES##################
echo "Loading user-selected modules..."
#the user can select extra modules to load in the BootManager...
if [ "$ADDLIST" != "" ];then #variable is in /etc/rc.d/MODULESCONFIG
 echo -n "Loading user-selected modules..."
 for MODULE in $ADDLIST
 do
  MPARAMS=""
  if [ `echo -n "$MODULE" | tr ':' ' ' | wc -w` -gt 1 ];then
   MPARAMS="`echo -n "$MODULE" | cut -f 2-9 -d ':' | tr ':' ' '`"
   MODULE="`echo -n "$MODULE" | cut -f 1 -d ':'`"
  fi
  echo "Loading module $MODULE $MPARAMS"
  
  if [ ! -f /etc/modules/firmware.dep.${KERNVER} ]; then
	if [ -f /etc/modules/firmware.dep ]; then
	 cp -f /etc/modules/firmware.dep /etc/modules/firmware.dep.${KERNVER}
	fi
  fi
  
  if [ -f /etc/modules/firmware.dep.${KERNVER} ]; then
   firmware_tarball_func #install firmware tarball. see functions4puppy4.
  fi
  #for mwave.ko (modem), do not load module, just the firmware, which has script that correctly loads mwave.ko.
  [ "$MODULE" != "mwave" ] && modprobe $MODULE $MPARAMS
 done
fi

if [ -h /dev/modem ];then
echo "Setting up modem..."
 DEVM="`readlink /dev/modem`"
 case $DEVM in
  modem) #error, circular link.
   rm -f /dev/modem
   DEVM=""
  ;;
  /dev/*) #wrong format.
   DEVM="`echo -n "$DEVM" | cut -f 3,4 -d '/'`"
   ln -snf $DEVM /dev/modem
  ;;
 esac
 case $DEVM in
  ttyS[0-9]) #apparently setserial can crash with other modems.
   setserial -v -b /dev/modem auto_irq skip_test autoconfig
  ;;
 esac
fi

#had hoped to retire this, but HardInfo, Pupscan need it... 110814 fix test...
[ -e /proc/bus/usb ] && busybox mount -t usbfs none /proc/bus/usb

#v408 only needed for 2.6.21.7, as 2.6.25.x loads these automatically...
#v408 kirk: Check for laptop battery...
echo "Checking for laptop battery..."
modprobe battery
if [ -d /proc/acpi/battery ]; then
 results="`find /proc/acpi/battery -mindepth 1 -type d`"
 if [ ! -z "$results" ]; then
  modprobe ac
  modprobe thermal
  modprobe fan
 else
  rmmod battery
 fi
fi

############RECOGNISE MEDIA DEVICES################
echo "Recognising media devices..."
STATUS=0
#recognise optical drives...
echo "Probing optical drives..."
OPTCNT=1;CDTYPE="";DVDTYPE="";CDBURNERTYPE=""
OPTICALS="`grep '^drive name:' /proc/sys/dev/cdrom/info | grep -o -E 'sr.*|scd.*|hd.*' | tr '\t' ' '`"
[ -L /dev/cdrom ] && CDTYPE="`readlink /dev/cdrom | cut -f 3 -d '/'`"
[ -L /dev/dvd ] && DVDTYPE="`readlink /dev/dvd | cut -f 3 -d '/'`"
[ -f /etc/cdburnerdevice ] && CDBURNERTYPE="`cat /etc/cdburnerdevice`"
[ "`echo "$OPTICALS" | grep "$CDTYPE"`" = "" ] && CDTYPE="" #no longer exists.
[ "`echo "$OPTICALS" | grep "$DVDTYPE"`" = "" ] && DVDTYPE="" #no longer exists.
[ "`echo "$OPTICALS" | grep "$CDBURNERTYPE"`" = "" ] && CDBURNERTYPE="" #no longer exists.
for ONEOPTICAL in $OPTICALS
do
 ONENUM="`echo -n "$ONEOPTICAL" | cut -c 3`"
 [ "$CDTYPE" = "" ] && CDTYPE="$ONEOPTICAL"
 [ "$DVDTYPE" = "" ] && [ "`grep '^Can read DVD' /proc/sys/dev/cdrom/info | head -n 1 | grep -o '[01].*' | sed -e 's/[^01]//g' | cut -c $OPTCNT`" = "1" ] && DVDTYPE="$ONEOPTICAL" #100131
 [ "$CDBURNERTYPE" = "" ] && [ "`grep '^Can write CD' /proc/sys/dev/cdrom/info | head -n 1 | grep -o '[01].*' | sed -e 's/[^01]//g' | cut -c $OPTCNT`" = "1" ] && CDBURNERTYPE="$ONEOPTICAL" #100131
 OPTCNT=`expr $OPTCNT + 1`
done
rm -f /dev/cdrom; rm -f /dev/dvd; rm -f /etc/cdburnerdevice
[ "$CDTYPE" ] && ln -sf /dev/$CDTYPE /dev/cdrom
[ "$DVDTYPE" ] && ln -sf /dev/$DVDTYPE /dev/dvd
[ "$CDBURNERTYPE" ] && echo -n "$CDBURNERTYPE" > /etc/cdburnerdevice
[ "$DVDTYPE" ] && hdparm -d1 /dev/$DVDTYPE >/dev/null 2>&1

echo "Probing mouse input..."

if [ ! -s /etc/mousedevice ];then #120423 change -f to -s test.
 echo -n "input/mice" > /etc/mousedevice
 ln -snf input/mice /dev/mouse
else
 [ "`cat /etc/mousedevice`" = "psaux" ] && echo -n "input/mice" > /etc/mousedevice
fi
#120423 pemasu: /dev/mouse was missing in full install...
MOUSELINK="`cat /etc/mousedevice`" #(refer /usr/sbin/input-wizard for examples)
if [ ! -e /dev/$MOUSELINK ];then #precaution, in case mouse interface is gone (unlikely, being paranoid).
 echo -n "input/mice" > /etc/mousedevice
 ln -snf input/mice /dev/mouse
fi

[ ! -e /dev/mouse ] && ln -s $MOUSELINK /dev/mouse

TOUCHPAD=''	

[ "`grep 'Elantech' /proc/bus/input/devices`" ] && TOUCHPAD='Elantech'
[ "`grep 'Alps' /proc/bus/input/devices`" ] && TOUCHPAD='Alps'
[ "`grep 'Synaptics' /proc/bus/input/devices`" ] && TOUCHPAD='Synaptics'

if [ "$TOUCHPAD" ];then

 . /etc/rc.d/MODULESCONFIG #ADDLIST
 
 if [ "`lsmod | grep '^evdev'`" = "" ];then
   if [ "$(cat /etc/rc.d/MODULESCONFIG | grep ADDLIST | grep evdev)" == "" ] ; then
	 REGEXt0="s%^ADDLIST=.*%ADDLIST='${ADDLIST} evdev '%"
	 sed -i "$REGEXt0" /etc/rc.d/MODULESCONFIG #so evdev module will load next bootup.
	 modprobe evdev
   fi
 fi
	 
fi

#100316 improper shutdown check. see above, also rc.shutdown and /sbin/init...
echo "Checking for improper shutdown..."
if [ ! -d /initrd ];then #if no /initrd, full hd install.
 [ ! $PDEV1 ] && PDEV1="`df | grep ' /$' | grep '^/dev/' | cut -f 1 -d ' ' | cut -f 3 -d '/'`"
 [ ! $DEV1FS ] && DEV1FS="`mount | grep ' on / ' | grep '^/dev/' | cut -f 5 -d ' '`"
 if [ "$PDEV1" -a "$DEV1FS" ];then
  echo "Appending /etc/rc.d/PUPSTATE ..."
  [ "`grep '^PDEV1' /etc/rc.d/PUPSTATE`" = "" ] && echo "PDEV1='$PDEV1'" >> /etc/rc.d/PUPSTATE
  [ "`grep '^DEV1FS' /etc/rc.d/PUPSTATE`" = "" ] && echo "DEV1FS='$DEV1FS'" >> /etc/rc.d/PUPSTATE
  #this file gets removed by rc.shutdown if a proper shutdown...
  echo "Creating fsckme.flg for filesystem check..."
  echo -n "${PDEV1},${DEV1FS}," > /fsckme.flg #ex: sda7,ext3,
  busybox chmod 666 /fsckme.flg #110503 so non-root can delete it.
 fi
else
 if [ "$PUPSAVE" ];then
  if [ $PUPMODE -ne 77 ] || [ $PUPMODE -ne 5 ]; then
  echo "Creating fsckme.flg for filesystem check..."
  echo -n "$PUPSAVE" > /initrd${PUP_HOME}/fsckme.flg #ex: sda7,ext3,/pupsave-10MAR2010.2fs
  busybox chmod 666 /initrd${PUP_HOME}/fsckme.flg #110503 so non-root can delete it.
  fi
 fi
fi

echo "Applying schedulers..."
if [ "$BOOT_SCHEDULER" ];then #120704 see /etc/rc.d/BOOTCONSTRAINED, variable set in 3builddistro.
 #my kernel defaults to 'cfq', change to 'deadline'. refer: http://tombuntu.com/index.php/2008/09/04/four-tweaks-for-using-linux-with-solid-state-drives/
 if [ "$PDEV1" ];then
  PDEV="`echo -n "$PDEV1" | sed -e 's%[0-9]*$%%' -e 's%p$%%'`" #mmcblk0p2 becomes mmcblk0
  if [ "`cat /sys/block/${PDEV}/queue/scheduler | grep "$BOOT_SCHEDULER"`" != "" ];then #check available.
   if [ "`cat /sys/block/${PDEV}/queue/scheduler | cut -f 2 -d '[' | cut -f 1 -d ']' | grep "$BOOT_SCHEDULER"`" = "" ];then #check not already chosen.
    #sync
    echo $BOOT_SCHEDULER > /sys/block/${PDEV}/queue/scheduler
    echo 1 > /sys/block/${PDEV}/queue/iosched/fifo_batch
   fi
  fi
 fi
fi
# peebee work around for rfkill in some HP laptops

if [ -e /dev/rfkill ] ; then
	rfkill list | grep -q "yes"
	BLOCKED="$?"

	if [ "$BLOCKED" = 0 ];then
		echo "Enabling wifi..."
		rfkill unblock wlan
	fi
fi

# SFR hack for IO bug http://murga-linux.com/puppy/viewtopic.php?p=681383#681383
echo "Doing some kernel setup..."
KERNVER=${KERNVER%%-*} # just for appending "-4g","-PAE" or whatever
if [ ! "$PUPMODE" = 5 ];then  
  if vercmp $KERNVER ge 3.2 ;then
    if vercmp $KERNVER lt 3.8 ;then
      case "$DEV1FS" in
      ntfs|vfat|ext2)
      echo "Execute: mount -o remount,sync /dev/loop1"
      mount -o remount,sync /dev/loop1 # changed 130210, SFR
      ;;
      esac
    fi
  fi
fi

[ "$BOOT_DISABLESWAP" ] && SWAPON="$BOOT_DISABLESWAP" #120704 now ask in 3builddistro if want use swap file/partition. anything not "yes" means no.

if ! grep -q 'noswap' /proc/cmdline; then
 SWAPON="no"
fi

if [ "$SWAPON" != "yes" ]; then
echo "Loading swap..."
 #load a swap partition...
 for ONESWAP in `fdisk -l | grep ' Linux swap' | cut -f 1 -d ' ' | tr '\n' ' '`
 do
  echo "Loading swap partition $ONESWAP..." #loading swap partition
  swapon $ONESWAP
  [ $? -eq 0 ] && SWAPON="yes"
 done
 
 #if no go, try for a swap file...
 
 if [ "$SWAPON" != "yes" ];then
  SWAPFILE="/pupswap.swp"
  if [ -f /initrd${PUP_HOME}${SWAPFILE} ];then
   echo "Loading swap file ${SWAPFILE}..." #loading swap file
   swapon /initrd${PUP_HOME}${SWAPFILE}
   [ $? -eq 0 ] && SWAPON="yes"
  fi
  
  if [ -f $SWAPFILE ];then
   echo "Loading swap file ${SWAPFILE}..." 
   swapon $SWAPFILE
   [ $? -eq 0 ] && SWAPON="yes"
  fi
 fi
 
fi

